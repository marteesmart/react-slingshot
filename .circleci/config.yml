# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  sayhellocommand:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo << parameters.to >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello World"

  command-job:
    docker:
      - image: cimg/base:stable
    steps:
      - sayhellocommand:
          to: $CIRCLE_WORKFLOW_ID


  save_hello_world_output:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "save text to file"
          command: echo "text to output here" > ~/output.txt

      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
    
  print_output_file:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: "get text from file"
          command: cat ~/output.txt


  error-handling:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "add error"
          command: "return 1"
      - run:
          name: "handle error"
          command: "echo error encountered!"
          when: on_fail


  print-variable:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Print Variable"
          command: "echo $Author # this env var must be set within the project"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-variable
      - save_hello_world_output
      - command-job
      - error-handling
      - print_output_file:
          requires:
            - save_hello_world_output
